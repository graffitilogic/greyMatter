#!/bin/bash
# 37TB Digital Learning Library Setup Script
# This script creates the directory structure and provides guidance for collecting resources

echo "üèóÔ∏è  **SETTING UP FOUNDATIONAL LANGUAGE LEARNING LIBRARY**"
echo "========================================================="
echo "Creating progressive language acquisition training datasets"
echo "Following developmental stages: preschool ‚Üí elementary ‚Üí advanced"
echo ""

# Configuration
LIBRARY_PATH="${1:-/Volumes/jarvis/trainData}"
echo "üìÅ Library path: $LIBRARY_PATH"

# Create base directory structure
echo "üìÇ Creating directory structure..."
mkdir -p "$LIBRARY_PATH"

# Language learning progression
mkdir -p "$LIBRARY_PATH/language/foundations/vocabulary"
mkdir -p "$LIBRARY_PATH/language/foundations/phonics"
mkdir -p "$LIBRARY_PATH/language/foundations/grammar"
mkdir -p "$LIBRARY_PATH/language/foundations/sentences"
mkdir -p "$LIBRARY_PATH/language/foundations/stories_simple"
mkdir -p "$LIBRARY_PATH/language/foundations/stories_complex"
mkdir -p "$LIBRARY_PATH/language/children_books/picture_books"
mkdir -p "$LIBRARY_PATH/language/children_books/early_readers"
mkdir -p "$LIBRARY_PATH/language/children_books/chapter_books"
mkdir -p "$LIBRARY_PATH/language/educational/workbooks"
mkdir -p "$LIBRARY_PATH/language/educational/worksheets"
mkdir -p "$LIBRARY_PATH/language/conversational/dialogues"
mkdir -p "$LIBRARY_PATH/language/conversational/common_phrases"

# Text resources (updated for progressive learning)
mkdir -p "$LIBRARY_PATH/text/graded_readers/level_1"
mkdir -p "$LIBRARY_PATH/text/graded_readers/level_2" 
mkdir -p "$LIBRARY_PATH/text/graded_readers/level_3"
mkdir -p "$LIBRARY_PATH/text/graded_readers/level_4"
mkdir -p "$LIBRARY_PATH/text/graded_readers/level_5"
mkdir -p "$LIBRARY_PATH/text/scientific_papers/computer_science"
mkdir -p "$LIBRARY_PATH/text/scientific_papers/mathematics"
mkdir -p "$LIBRARY_PATH/text/scientific_papers/physics"
mkdir -p "$LIBRARY_PATH/text/scientific_papers/biology"
mkdir -p "$LIBRARY_PATH/text/documentation/programming"
mkdir -p "$LIBRARY_PATH/text/documentation/systems"
mkdir -p "$LIBRARY_PATH/text/reference/dictionaries"
mkdir -p "$LIBRARY_PATH/text/reference/encyclopedias"

# Code repositories
mkdir -p "$LIBRARY_PATH/code/examples/beginner"
mkdir -p "$LIBRARY_PATH/code/examples/intermediate"
mkdir -p "$LIBRARY_PATH/code/examples/advanced"
mkdir -p "$LIBRARY_PATH/code/open_source/libraries"
mkdir -p "$LIBRARY_PATH/code/open_source/frameworks"
mkdir -p "$LIBRARY_PATH/code/algorithms/sorting"
mkdir -p "$LIBRARY_PATH/code/algorithms/searching"
mkdir -p "$LIBRARY_PATH/code/algorithms/graph"
mkdir -p "$LIBRARY_PATH/code/projects/simple"
mkdir -p "$LIBRARY_PATH/code/projects/medium"
mkdir -p "$LIBRARY_PATH/code/projects/complex"

# Multimedia content
mkdir -p "$LIBRARY_PATH/multimedia/videos/educational"
mkdir -p "$LIBRARY_PATH/multimedia/videos/documentaries"
mkdir -p "$LIBRARY_PATH/multimedia/videos/tutorials"
mkdir -p "$LIBRARY_PATH/multimedia/audio/lectures"
mkdir -p "$LIBRARY_PATH/multimedia/audio/podcasts"
mkdir -p "$LIBRARY_PATH/multimedia/audio/audiobooks"
mkdir -p "$LIBRARY_PATH/multimedia/images/diagrams"
mkdir -p "$LIBRARY_PATH/multimedia/images/charts"

# Interactive content
mkdir -p "$LIBRARY_PATH/interactive/simulations/physics"
mkdir -p "$LIBRARY_PATH/interactive/simulations/chemistry"
mkdir -p "$LIBRARY_PATH/interactive/games/educational"
mkdir -p "$LIBRARY_PATH/interactive/games/puzzle"
mkdir -p "$LIBRARY_PATH/interactive/exercises/math"
mkdir -p "$LIBRARY_PATH/interactive/exercises/programming"

echo "‚úÖ Directory structure created!"
echo ""

echo "üìö **RECOMMENDED RESOURCES TO COLLECT**"
echo "========================================"
echo ""

echo "ÔøΩ **FOUNDATIONAL LANGUAGE ACQUISITION STRATEGY**"
echo "================================================="
echo ""
echo "üìö **STAGE 1: CORE VOCABULARY (Ages 2-4 equivalent)**"
echo "   ‚Ä¢ Dolch Sight Words (220 most common words)"
echo "   ‚Ä¢ Fry's First 1000 Words"
echo "   ‚Ä¢ Basic nouns, verbs, adjectives"
echo "   ‚Ä¢ Color words, number words, family words"
echo ""
echo "üìù **STAGE 2: PHONICS & WORD RECOGNITION (Ages 4-6)**"
echo "   ‚Ä¢ Letter-sound relationships"
echo "   ‚Ä¢ CVC (Consonant-Vowel-Consonant) patterns"
echo "   ‚Ä¢ Blends and digraphs"
echo "   ‚Ä¢ Rhyming patterns"
echo ""
echo "üìñ **STAGE 3: SIMPLE SENTENCES (Ages 5-7)**"
echo "   ‚Ä¢ Subject-Verb patterns"
echo "   ‚Ä¢ Subject-Verb-Object patterns"
echo "   ‚Ä¢ Simple questions and commands"
echo "   ‚Ä¢ Basic punctuation"
echo ""
echo "üìö **STAGE 4: EARLY READING (Ages 6-8)**"
echo "   ‚Ä¢ Leveled readers (Guided Reading A-Z)"
echo "   ‚Ä¢ Simple story comprehension"
echo "   ‚Ä¢ Main idea and details"
echo "   ‚Ä¢ Character identification"
echo ""
echo "üéØ **STAGE 5: INTERMEDIATE COMPREHENSION (Ages 8-12)**"
echo "   ‚Ä¢ Multi-paragraph texts"
echo "   ‚Ä¢ Inference and prediction"
echo "   ‚Ä¢ Compare and contrast"
echo "   ‚Ä¢ Cause and effect"
echo ""

echo "üîç **RECOMMENDED TRAINING DATASETS**"
echo "==================================="
echo ""
echo "1. **SIMPLE ENGLISH WIKIPEDIA** (Simplified articles)"
echo "   ‚Ä¢ 200,000+ articles in Basic English (850 words)"
echo "   ‚Ä¢ Complex topics explained simply"
echo "   ‚Ä¢ Download: https://dumps.wikimedia.org/simplewiki/"
echo "   ‚Ä¢ Size: ~2GB compressed, manageable for training"
echo ""
echo "2. **DOLCH SIGHT WORDS** (220 essential words)"
echo "   ‚Ä¢ Pre-primer: 40 words (a, and, away, big, blue, can, come, down, find, for...)"
echo "   ‚Ä¢ Primer: 52 words (all, am, are, at, ate, be, black, brown, but, came...)"
echo "   ‚Ä¢ Lists available: https://www.dolchword.net/"
echo ""
echo "3. **CHILDREN'S BOOK CORPUS** (Age-appropriate literature)"
echo "   ‚Ä¢ Project Gutenberg Children's Section"
echo "   ‚Ä¢ Classic fairy tales and fables"
echo "   ‚Ä¢ Modern picture book transcripts"
echo ""
echo "4. **GRADED READER SERIES** (Controlled vocabulary)"
echo "   ‚Ä¢ Oxford Reading Tree levels"
echo "   ‚Ä¢ Penguin Readers (6 levels)"
echo "   ‚Ä¢ Cambridge English Readers"
echo ""

echo "üéØ **START HERE (Free & Legal):**"
echo ""
echo "1. **SIMPLE ENGLISH WIKIPEDIA** (Perfect for foundational training)"
echo "   ‚Ä¢ Simple vocabulary and sentence structure"
echo "   ‚Ä¢ Command: wget 'https://dumps.wikimedia.org/simplewiki/latest/simplewiki-latest-pages-articles.xml.bz2'"
echo "   ‚Ä¢ Process with: python3 -m wikiextractor.WikiExtractor"
echo "   ‚Ä¢ Size: ~2GB compressed (much more manageable than Gutenberg)"
echo ""
echo "2. **PROJECT GUTENBERG - CHILDREN'S SECTION** (Selective approach)"
echo "   ‚Ä¢ Specific children's books instead of entire collection"
echo "   ‚Ä¢ Alice in Wonderland: http://www.gutenberg.org/files/11/11-0.txt"
echo "   ‚Ä¢ Tom Sawyer: http://www.gutenberg.org/files/74/74-0.txt"
echo "   ‚Ä¢ Treasure Island: http://www.gutenberg.org/files/209/209-0.txt"
echo "   ‚Ä¢ Fairy tales and fables collections"
echo ""
echo "3. **STRUCTURED VOCABULARY LISTS**"
echo "   ‚Ä¢ Create Dolch sight word files"
echo "   ‚Ä¢ Fry's instant words (first 1000)"
echo "   ‚Ä¢ Basic 850 word vocabulary (Simple English base)"
echo "   ‚Ä¢ Word frequency lists by grade level"
echo "   ‚Ä¢ Command: wget -r -np -nH --cut-dirs=2 -R 'index.html*' -P '$LIBRARY_PATH/text/literature/classics' http://www.gutenberg.org/files/"
echo "   ‚Ä¢ Size: ~50GB"
echo ""

echo "2. OPENSTAX TEXTBOOKS (Free college textbooks)"
echo "   ‚Ä¢ Visit: https://openstax.org/"
echo "   ‚Ä¢ Download manually or use their API"
echo "   ‚Ä¢ Subjects: Math, Science, History, Economics"
echo "   ‚Ä¢ Target: $LIBRARY_PATH/text/textbooks/"
echo ""

echo "3. MIT OPENCOURSEWARE"
echo "   ‚Ä¢ Course materials from MIT"
echo "   ‚Ä¢ Visit: https://ocw.mit.edu/"
echo "   ‚Ä¢ Download course materials manually"
echo "   ‚Ä¢ Target: $LIBRARY_PATH/text/textbooks/advanced/"
echo ""

echo "4. WIKIPEDIA DUMPS"
echo "   ‚Ä¢ Full Wikipedia content"
echo "   ‚Ä¢ wget https://dumps.wikimedia.org/enwiki/latest/enwiki-latest-pages-articles.xml.bz2"
echo "   ‚Ä¢ Extract to: $LIBRARY_PATH/text/reference/encyclopedias/"
echo "   ‚Ä¢ Size: ~20GB compressed, ~80GB uncompressed"
echo ""

echo "üî¨ **SCIENTIFIC RESOURCES:**"
echo ""
echo "5. ARXIV.ORG PAPERS"
echo "   ‚Ä¢ Open access scientific papers"
echo "   ‚Ä¢ Use arxiv bulk data access"
echo "   ‚Ä¢ Categories: cs.AI, cs.LG, math.*, physics.*"
echo "   ‚Ä¢ Target: $LIBRARY_PATH/text/scientific_papers/"
echo "   ‚Ä¢ Size: ~2TB and growing"
echo ""

echo "6. PUBMED CENTRAL"
echo "   ‚Ä¢ Biomedical literature"
echo "   ‚Ä¢ Use PMC OAI service for bulk download"
echo "   ‚Ä¢ Target: $LIBRARY_PATH/text/scientific_papers/biology/"
echo ""

echo "üõ†Ô∏è  **CODE REPOSITORIES:**"
echo ""
echo "7. GITHUB EDUCATIONAL REPOS"
echo "   ‚Ä¢ git clone https://github.com/freeCodeCamp/freeCodeCamp.git $LIBRARY_PATH/code/examples/intermediate/freecodecamp"
echo "   ‚Ä¢ git clone https://github.com/TheAlgorithms/Python.git $LIBRARY_PATH/code/algorithms/"
echo "   ‚Ä¢ git clone https://github.com/sindresorhus/awesome.git $LIBRARY_PATH/code/examples/advanced/awesome-lists"
echo ""

echo "8. PROGRAMMING TUTORIALS"
echo "   ‚Ä¢ Download tutorial repositories"
echo "   ‚Ä¢ Focus on well-documented, educational projects"
echo "   ‚Ä¢ Target: $LIBRARY_PATH/code/examples/"
echo ""

echo "üé• **MULTIMEDIA (Use youtube-dl/yt-dlp):**"
echo ""
echo "9. EDUCATIONAL YOUTUBE CHANNELS"
echo "   ‚Ä¢ 3Blue1Brown (Math visualization)"
echo "   ‚Ä¢ Khan Academy"
echo "   ‚Ä¢ TED-Ed"
echo "   ‚Ä¢ Crash Course"
echo "   ‚Ä¢ Command: yt-dlp -f 'best[height<=720]' 'https://youtube.com/@3blue1brown'"
echo ""

echo "10. TED TALKS"
echo "    ‚Ä¢ Download TED talk videos"
echo "    ‚Ä¢ Target: $LIBRARY_PATH/multimedia/videos/educational/"
echo ""

echo "‚ö†Ô∏è  **IMPORTANT NOTES:**"
echo ""
echo "‚Ä¢ Respect copyright and terms of service"
echo "‚Ä¢ Use rate limiting: --limit-rate=200k for wget"
echo "‚Ä¢ Monitor your bandwidth usage"
echo "‚Ä¢ Some downloads may take days/weeks"
echo "‚Ä¢ Consider running downloads in screen/tmux sessions"
echo "‚Ä¢ Set up log files to track progress"
echo ""

echo "üöÄ **QUICK START COMMANDS:**"
echo ""
echo "# 1. Download Project Gutenberg (small sample)"
echo "cd '$LIBRARY_PATH/text/literature/classics'"
echo "wget -r -l1 -np -nH --cut-dirs=2 -A '*.txt' -R 'index.html*' 'http://www.gutenberg.org/files/' --limit-rate=200k"
echo ""

echo "# 2. Clone essential code repositories"
echo "cd '$LIBRARY_PATH/code/examples/intermediate'"
echo "git clone https://github.com/freeCodeCamp/freeCodeCamp.git"
echo "git clone https://github.com/microsoft/vscode.git"
echo ""

echo "# 3. Download a Wikipedia sample"
echo "cd '$LIBRARY_PATH/text/reference/encyclopedias'"
echo "wget 'https://dumps.wikimedia.org/enwiki/latest/enwiki-latest-abstract.xml.gz'"
echo ""

echo "üìä **EXPECTED STORAGE USAGE:**"
echo ""
echo "‚Ä¢ Text content: 5-10 TB"
echo "‚Ä¢ Code repositories: 2-5 TB" 
echo "‚Ä¢ Scientific papers: 10-15 TB"
echo "‚Ä¢ Multimedia: 15-20 TB"
echo "‚Ä¢ Total: ~37 TB"
echo ""

echo "üéØ **NEXT STEPS:**"
echo ""
echo "1. Start with the Quick Start commands above"
echo "2. Monitor your downloads and available space"
echo "3. Create a simple web interface to browse content"
echo "4. Set up automated update scripts"
echo "5. Consider deduplication tools"
echo "6. Run the greyMatter learning system!"
echo ""

echo "‚úÖ Setup complete! Your brain now has a library to explore."
